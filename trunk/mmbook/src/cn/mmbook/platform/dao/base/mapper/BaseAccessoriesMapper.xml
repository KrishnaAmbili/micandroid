<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<mapper namespace="BaseAccessories">

	<resultMap id="BaseAccessoriesResult" type="cn.mmbook.platform.model.base.BaseAccessories">
              <result property="id" column="id_" />				
              <result property="accessoriesTypeId" column="accessories_type_id_" />				
              <result property="subordinationId" column="subordination_id_" />				
              <result property="contentId" column="content_id_" />				
              <result property="sortId" column="sort_id_" />				
              <result property="contentUrl" column="content_url_" />				
              <result property="format" column="format_" />				
              <result property="fileSize" column="file_size_" />				
              <result property="notes" column="notes_" />				
              <result property="fileSurfix" column="file_surfix_" />
              <result property="insertTime" column="insert_time_" />
              				
	</resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="baseAccessoriesColumns">
	    <![CDATA[
        	id_ AS id,
        	accessories_type_id_ AS accessoriesTypeId,
        	subordination_id_ AS subordinationId,
        	content_id_ AS contentId,
        	sort_id_ AS sortId,
        	content_url_ AS contentUrl,
        	format_ AS format,
        	file_size_ AS fileSize,
        	notes_ AS notes,
        	file_surfix_ AS fileSurfix
	    ]]>
	</sql>
	
	
	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" parameterType="cn.mmbook.platform.model.base.BaseAccessories" >
        INSERT INTO
        tb_base_accessories_info (
        	id_ ,
        	accessories_type_id_ ,
        	subordination_id_ ,
        	content_id_ ,
        	sort_id_ ,
        	content_url_ ,
        	format_ ,
        	file_size_ ,
        	notes_ ,
        	file_surfix_,
        	insert_time_
        ) VALUES (
        	#{id,jdbcType=VARCHAR} ,
        	#{accessoriesTypeId,jdbcType=INTEGER} ,
        	#{subordinationId,jdbcType=VARCHAR} ,
        	#{contentId,jdbcType=VARCHAR} ,
        	#{sortId,jdbcType=INTEGER} ,
        	#{contentUrl,jdbcType=VARCHAR} ,
        	#{format,jdbcType=VARCHAR} ,
        	#{fileSize,jdbcType=INTEGER} ,
        	#{notes,jdbcType=VARCHAR} ,
        	#{fileSurfix,jdbcType=VARCHAR},
        	now()
        )
	</insert>
    
	<update id="update" parameterType="cn.mmbook.platform.model.base.BaseAccessories">
    <![CDATA[
        UPDATE tb_base_accessories_info SET
	        accessories_type_id_ = #{accessoriesTypeId,jdbcType=INTEGER} ,
	        subordination_id_ = #{subordinationId,jdbcType=VARCHAR} ,
	        content_id_ = #{contentId,jdbcType=VARCHAR} ,
	        sort_id_ = #{sortId,jdbcType=INTEGER} ,
	        content_url_ = #{contentUrl,jdbcType=VARCHAR} ,
	        format_ = #{format,jdbcType=VARCHAR} ,
	        file_size_ = #{fileSize,jdbcType=INTEGER} ,
	        notes_ = #{notes,jdbcType=VARCHAR} ,
	        file_surfix_ = #{fileSurfix,jdbcType=VARCHAR} 
        WHERE 
	        id_ = #{id} 
    ]]>
	</update>

    <delete id="delete" parameterType="java.lang.String">
    <![CDATA[
        DELETE FROM tb_base_accessories_info WHERE
        id_ = #{id} 
    ]]>
    </delete>
    <delete id="deleteByMap"  parameterType="java.util.HashMap">
        DELETE FROM tb_base_accessories_info WHERE 1=1 
	       <if test="@Ognl@isNotEmpty(contentId)">
				AND content_id_ = #{contentId}
			</if>
	       <if test="@Ognl@isNotEmpty(sortId)">
				AND sort_id_ = #{sortId}
			</if>
    </delete>
    <select id="getById" parameterType="java.lang.String" resultMap="BaseAccessoriesResult">
		SELECT <include refid="baseAccessoriesColumns" />
	    <![CDATA[
		    FROM tb_base_accessories_info 
	        WHERE 
		        id_ = #{id} 
	    ]]>
	</select>
    <select id="findAll" resultMap="BaseAccessoriesResult">
		SELECT <include refid="baseAccessoriesColumns" />
	    <![CDATA[
		    FROM tb_base_accessories_info
	    ]]>
	</select>
	<sql id="baseAccessoriesDynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>
	       <if test="@Ognl@isNotEmpty(id)">
				AND id_ = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(accessoriesTypeId)">
				AND accessories_type_id_ = #{accessoriesTypeId}
			</if>
	       <if test="@Ognl@isNotEmpty(subordinationId)">
				AND subordination_id_ = #{subordinationId}
			</if>
	       <if test="@Ognl@isNotEmpty(contentId)">
				AND content_id_ = #{contentId}
			</if>
	       <if test="@Ognl@isNotEmpty(sortId)">
				AND sort_id_ = #{sortId}
			</if>
	       <if test="@Ognl@isNotEmpty(contentUrl)">
				AND content_url_ = #{contentUrl}
			</if>
	       <if test="@Ognl@isNotEmpty(format)">
				AND format_ = #{format}
			</if>
	       <if test="@Ognl@isNotEmpty(fileSize)">
				AND file_size_ = #{fileSize}
			</if>
	       <if test="@Ognl@isNotEmpty(notes)">
				AND notes_ = #{notes}
			</if>
	       <if test="@Ognl@isNotEmpty(fileSurfix)">
				AND file_surfix_ = #{fileSurfix}
			</if>
		</where>
	</sql>
		
    <select id="count" resultType="long">
        SELECT COUNT(1) FROM tb_base_accessories_info 
		<include refid="baseAccessoriesDynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="BaseAccessoriesResult">
    	SELECT <include refid="baseAccessoriesColumns" />
	    FROM tb_base_accessories_info 
		<include refid="baseAccessoriesDynamicWhere"/>
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>


    <!--
    	多表关联分页查询
    	处理处理实现
    -->
    <select id="anytablelist" resultMap="BaseAccessoriesResult">
    	SELECT <include refid="baseAccessoriesColumns" />
	    FROM tb_base_accessories_info
    </select>
		
    <select id="anytablecount" resultType="long">
        SELECT COUNT(1) FROM tb_base_accessories_info 
		<include refid="baseAccessoriesDynamicWhere"/>    
    </select>
	
	<!-- getList -->
	<select id="getBaseAccessoriesList" resultMap="BaseAccessoriesResult">
	  SELECT <include refid="baseAccessoriesColumns" />
	  FROM tb_base_accessories_info
	  <include refid="baseAccessoriesDynamicWhere"/>
	</select>


</mapper>
